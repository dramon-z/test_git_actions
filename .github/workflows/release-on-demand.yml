name: on-demand

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Nombre del tag (opcional)'
        required: false
      repositorio:
        description: 'Nombre del repositorio (en formato "usuario/repositorio")'
        required: true

jobs:
  verificar-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Configurar autenticación
        uses: actions/checkout@v2

      - name: Obtener último tag
        id: obtener-ultimo-tag
        if: ${{ github.event.inputs.tag == '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          
          latest_tag=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.event.inputs.repositorio }}/tags" | jq -r '.[].name' | sort -V | tail -n1)
          echo "$latest_tag"
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Verificar Tag
        id: verificar-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          tag_to_check=${{ github.event.inputs.tag }}
          if [[ -z "$tag_to_check" ]]; then
            tag_to_check=$LATEST_TAG
          fi

          response=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.event.inputs.repositorio }}/git/refs/tags/$tag_to_check")
          if [[ "$response" == "200" ]]; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

          if [[ "${{ env.TAG_EXISTS }}" == "true" ]]; then
            echo "El tag ${{ github.event.inputs.tag }} existe en el repositorio ${{ github.event.inputs.repositorio }}"
          else
            echo "El tag ${{ github.event.inputs.tag }} NO existe en el repositorio ${{ github.event.inputs.repositorio }}"
          fi

